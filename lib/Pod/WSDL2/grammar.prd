{ 
	use Data::Dumper;
	use lib('/data/perl/PodWSDL2/lib');

	use Pod::WSDL2::Doc;
	use Pod::WSDL2::Param;
	use Pod::WSDL2::Return;
	use Pod::WSDL2::Fault;
}

wsdlblock: doc_block(?) one_way(?) input_block(s?) return_block(?) fault_block(s?) eofile {
	$return = {
		'docs'   => $item[1]->[0],
		'oneway' => $item[2]->[0],
		'inputs' => $item[3],
		'return' => $item[4]->[0],
		'faults' => $item[5]
	};
}
| <error>

doc_block: '_DOC' <commit> docline(s) { $return = Pod::WSDL2::Doc->new(join('',@{$item{'docline(s)'}})) }

input_block: input_type <commit> field_name ( hash | array | simple ) {
	$item[4]->{input_type} = $item[1];
	$item[4]->{name}       = $item[3];
	$return = Pod::WSDL2::Param->new($item[4]);
}
|<error>

input_type: '_INOUT' | '_IN' | '_OUT'

return_block: '_RETURN' <commit> ( hash | array | simple     ) { $return = Pod::WSDL2::Return->new($item[3]); }
fault_block:  '_FAULT'  <commit> ( hash | array | fault_type ) { $return = Pod::WSDL2::Fault->new( $item[3]); }

eofile: /^\Z/

docline: ...!commands <skip:'[ \t]*'> /.*\n+/ { $return = $item[3]; 1; }

field_name: /[\w-]+/ { $return = $item[1]; 1; }
          | <error> 

simple: sigul <commit> data_type optional(?) docline(?) { 
	$return = {
		simple   => 1,
		multiple => $item{'sigul'},
		type     => $item{'data_type'},
		optional => $item{'optional(?)'}->[0],
		docs     => Pod::WSDL2::Doc->new(join('',@{$item{'docline(?)'}}))
	};
}

sigul: '$' { $return = 0; 1;}
     | '@' { $return = 1;   }

fault_type: data_type docline(?) {
	$return = {
		type => $item[1],
		docs => $item[2]->[0]
	};
}

hash: '{' hash_element(s) '}' {  
	$return = { 
		simple   => 0, 
		type     => 'hash',
		elements => $item{'hash_element(s)'}
	};
}

array: '[' ( hash | array | simple(s) ) ']' {
	$return = { 
		simple   => 0, 
		type     => 'array', 
		elements => $item[2]
	};
}

hash_element: field_name '=>' ( hash | array | simple ) {
	$return = {
		'name' => $item{field_name},
		%{$item[3]}
	};
}

optional: 'OPTIONAL' { $return = 1; }

commands: '_DOC' | input_type | one_way | '_RETURN' | '_FAULT'

one_way: '_ONEWAY' { $return = 'oneway'; }

data_type: /\w+(::\w+)*/ { $return = $item[1]; }

#placeholder:
#	'anyType' | 'anySimpleType' |
#	'string' | 'normalizedString' | 'token' | 'anyUri' | 'language' | 'Name' | 'QName' | 'NCName' |
#	'boolean' |
#	'float' | 'double' |
#	'decimal' | 'int' |
#	'positiveInteger' | 'nonPositiveInteger' | 'negativeInteger' | 'nonNegativeInteger' |
#	'long' | 'short' | 'byte' |
#	'unsignedInt' | 'unsignedLong' | 'unsignedShort' | 'unsignedByte' |
#	'duration' | 'dateTime' | 'time' | 'date' | 'gYearMonth' | 'gYear' | 'gMonthDay' | 'gDay' | 'gMonth' |
#	'hexBinary' | 'base64Binary'
